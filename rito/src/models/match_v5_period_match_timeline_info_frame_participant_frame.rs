/*
 * Riot API
 *
 *  OpenAPI/Swagger version of the [Riot API](https://developer.riotgames.com/). Automatically generated daily. ## OpenAPI Spec File The following versions of the Riot API spec file are available: - `openapi-3.0.0.json` ([view file](../openapi-3.0.0.json), [ui select](?url=../openapi-3.0.0.json)) - `openapi-3.0.0.min.json` ([view file](../openapi-3.0.0.min.json), [ui select](?url=../openapi-3.0.0.min.json)) - `openapi-3.0.0.yml` ([view file](../openapi-3.0.0.yml), [ui select](?url=../openapi-3.0.0.yml)) - `openapi-3.0.0.min.yml` ([view file](../openapi-3.0.0.min.yml), [ui select](?url=../openapi-3.0.0.min.yml)) - `swaggerspec-2.0.json` ([view file](../swaggerspec-2.0.json), [ui select](?url=../swaggerspec-2.0.json)) - `swaggerspec-2.0.min.json` ([view file](../swaggerspec-2.0.min.json), [ui select](?url=../swaggerspec-2.0.min.json)) - `swaggerspec-2.0.yml` ([view file](../swaggerspec-2.0.yml), [ui select](?url=../swaggerspec-2.0.yml)) - `swaggerspec-2.0.min.yml` ([view file](../swaggerspec-2.0.min.yml), [ui select](?url=../swaggerspec-2.0.min.yml)) ## Other Files - Missing DTOs: [`missing.json`](../missing.json) - [Enum Files](../enums/) ## Source Code Source code on [GitHub](https://github.com/MingweiSamuel/riotapi-schema). Pull requests welcome! ## Automatically Generated Rebuilt on [Travis CI](https://travis-ci.com/MingweiSamuel/riotapi-schema/builds) daily. *** 
 *
 * The version of the OpenAPI document: dae26e2703c82eb19447d1b27f1209801cb83beb
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct MatchV5PeriodMatchTimelineInfoFrameParticipantFrame {
    #[serde(rename = "championStats")]
    pub champion_stats: Box<crate::models::MatchV5PeriodMatchTimelineInfoFrameParticipantFrameChampionStats>,
    #[serde(rename = "currentGold")]
    pub current_gold: i32,
    #[serde(rename = "damageStats")]
    pub damage_stats: Box<crate::models::MatchV5PeriodMatchTimelineInfoFrameParticipantFrameDamageStats>,
    #[serde(rename = "goldPerSecond")]
    pub gold_per_second: i32,
    #[serde(rename = "jungleMinionsKilled")]
    pub jungle_minions_killed: i32,
    #[serde(rename = "level")]
    pub level: i32,
    #[serde(rename = "minionsKilled")]
    pub minions_killed: i32,
    #[serde(rename = "participantId")]
    pub participant_id: i32,
    #[serde(rename = "position")]
    pub position: Box<crate::models::MatchV5PeriodMatchTimelinePosition>,
    #[serde(rename = "timeEnemySpentControlled")]
    pub time_enemy_spent_controlled: i32,
    #[serde(rename = "totalGold")]
    pub total_gold: i32,
    #[serde(rename = "xp")]
    pub xp: i32,
}

impl MatchV5PeriodMatchTimelineInfoFrameParticipantFrame {
    pub fn new(champion_stats: crate::models::MatchV5PeriodMatchTimelineInfoFrameParticipantFrameChampionStats, current_gold: i32, damage_stats: crate::models::MatchV5PeriodMatchTimelineInfoFrameParticipantFrameDamageStats, gold_per_second: i32, jungle_minions_killed: i32, level: i32, minions_killed: i32, participant_id: i32, position: crate::models::MatchV5PeriodMatchTimelinePosition, time_enemy_spent_controlled: i32, total_gold: i32, xp: i32) -> MatchV5PeriodMatchTimelineInfoFrameParticipantFrame {
        MatchV5PeriodMatchTimelineInfoFrameParticipantFrame {
            champion_stats: Box::new(champion_stats),
            current_gold,
            damage_stats: Box::new(damage_stats),
            gold_per_second,
            jungle_minions_killed,
            level,
            minions_killed,
            participant_id,
            position: Box::new(position),
            time_enemy_spent_controlled,
            total_gold,
            xp,
        }
    }
}


