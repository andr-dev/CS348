/*
 * Riot API
 *
 *  OpenAPI/Swagger version of the [Riot API](https://developer.riotgames.com/). Automatically generated daily. ## OpenAPI Spec File The following versions of the Riot API spec file are available: - `openapi-3.0.0.json` ([view file](../openapi-3.0.0.json), [ui select](?url=../openapi-3.0.0.json)) - `openapi-3.0.0.min.json` ([view file](../openapi-3.0.0.min.json), [ui select](?url=../openapi-3.0.0.min.json)) - `openapi-3.0.0.yml` ([view file](../openapi-3.0.0.yml), [ui select](?url=../openapi-3.0.0.yml)) - `openapi-3.0.0.min.yml` ([view file](../openapi-3.0.0.min.yml), [ui select](?url=../openapi-3.0.0.min.yml)) - `swaggerspec-2.0.json` ([view file](../swaggerspec-2.0.json), [ui select](?url=../swaggerspec-2.0.json)) - `swaggerspec-2.0.min.json` ([view file](../swaggerspec-2.0.min.json), [ui select](?url=../swaggerspec-2.0.min.json)) - `swaggerspec-2.0.yml` ([view file](../swaggerspec-2.0.yml), [ui select](?url=../swaggerspec-2.0.yml)) - `swaggerspec-2.0.min.yml` ([view file](../swaggerspec-2.0.min.yml), [ui select](?url=../swaggerspec-2.0.min.yml)) ## Other Files - Missing DTOs: [`missing.json`](../missing.json) - [Enum Files](../enums/) ## Source Code Source code on [GitHub](https://github.com/MingweiSamuel/riotapi-schema). Pull requests welcome! ## Automatically Generated Rebuilt on [Travis CI](https://travis-ci.com/MingweiSamuel/riotapi-schema/builds) daily. *** 
 *
 * The version of the OpenAPI document: dae26e2703c82eb19447d1b27f1209801cb83beb
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ValMatchV1PeriodPlayerRoundStatsDto {
    #[serde(rename = "puuid")]
    pub puuid: String,
    #[serde(rename = "kills")]
    pub kills: Vec<crate::models::ValMatchV1PeriodKillDto>,
    #[serde(rename = "damage")]
    pub damage: Vec<crate::models::ValMatchV1PeriodDamageDto>,
    #[serde(rename = "score")]
    pub score: i32,
    #[serde(rename = "economy")]
    pub economy: Box<crate::models::ValMatchV1PeriodEconomyDto>,
    #[serde(rename = "ability")]
    pub ability: Box<crate::models::ValMatchV1PeriodAbilityDto>,
}

impl ValMatchV1PeriodPlayerRoundStatsDto {
    pub fn new(puuid: String, kills: Vec<crate::models::ValMatchV1PeriodKillDto>, damage: Vec<crate::models::ValMatchV1PeriodDamageDto>, score: i32, economy: crate::models::ValMatchV1PeriodEconomyDto, ability: crate::models::ValMatchV1PeriodAbilityDto) -> ValMatchV1PeriodPlayerRoundStatsDto {
        ValMatchV1PeriodPlayerRoundStatsDto {
            puuid,
            kills,
            damage,
            score,
            economy: Box::new(economy),
            ability: Box::new(ability),
        }
    }
}


